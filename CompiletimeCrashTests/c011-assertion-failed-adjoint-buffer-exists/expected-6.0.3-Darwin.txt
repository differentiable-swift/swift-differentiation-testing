# CRASH
error: compile command failed due to signal 6 (use -v to see invocation)
Assertion failed: (insertion.second && "Adjoint buffer already exists"), function setAdjointBuffer, file PullbackCloner.cpp, line 688.
Please submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.
Stack dump:
Apple Swift version 6.0.3 (swift-6.0.3-RELEASE)
Compiling with effective version 5.10
While evaluating request ExecuteSILPipelineRequest(Run pipelines { Mandatory Diagnostic Passes + Enabling Optimization Passes } on SIL for main)
While running pass #33 SILModuleTransform "Differentiation".
While processing // differentiability witness for a<A, B>(_:c:)
sil_differentiability_witness hidden [reverse] [parameters 0] [results 0] <F, A where F : Differentiable, A : Differentiable> @$s4main1a_1cq_SgxSg_q_xYjrXEt16_Differentiation14DifferentiableRzAfGR_r0_lF : $@convention(thin) <F, A where F : Differentiable, A : Differentiable> (@in_guaranteed Optional<F>, @guaranteed @differentiable(reverse) @noescape @callee_guaranteed @substituted <τ_0_0, τ_0_1> (@in_guaranteed τ_0_0) -> @out τ_0_1 for <F, A>) -> @out Optional<A> {
}

 on SIL function "@$s4main1a_1cq_SgxSg_q_xYjrXEt16_Differentiation14DifferentiableRzAfGR_r0_lF".
 for 'a(_:c:)' (at main.swift:8:26)
While generating VJP for SIL function "@$s4main1a_1cq_SgxSg_q_xYjrXEt16_Differentiation14DifferentiableRzAfGR_r0_lF".
 for 'a(_:c:)' (at main.swift:8:26)
While generating pullback for SIL function "@$s4main1a_1cq_SgxSg_q_xYjrXEt16_Differentiation14DifferentiableRzAfGR_r0_lF".
 for 'a(_:c:)' (at main.swift:8:26)
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
